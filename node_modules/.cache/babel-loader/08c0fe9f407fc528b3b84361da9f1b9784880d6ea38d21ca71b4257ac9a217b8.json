{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Projects/fun-with-labor-data/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport USAMap from \"react-usa-map\";\nimport axios from 'axios';\nimport * as XLSX from 'xlsx';\nimport ExcelReader from './components/StateInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n'./components/StateInfo.js';\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleFetchFromUrl = async () => {\n      const url = '/state_M2023_dl.xlsx';\n      console.log(url);\n      try {\n        const response = await axios.get(url, {\n          responseType: 'arraybuffer'\n        });\n        const data = new Uint8Array(response.data);\n        const workbook = XLSX.read(data, {\n          type: 'array'\n        });\n        const sheetName = workbook.SheetNames[0];\n        const sheet = workbook.Sheets[sheetName];\n        const jsonData = XLSX.utils.sheet_to_json(sheet, {\n          header: 32\n        });\n        this.state.laborJSONData = jsonData;\n      } catch (error) {\n        console.error('Error fetching or parsing Excel file:', error);\n      }\n    };\n    this.mapHandler = event => {\n      let stateName = event.target.querySelector('title').innerHTML;\n    };\n    this.statesFill = () => {\n      return {\n        \"CA\": {\n          fill: \"rgba(0,0,155,0.8)\",\n          clickHandler: () => alert(\"Custom callback for this US state.\")\n        }\n      };\n    };\n    this.state = {\n      currentStateData: 'Select a state',\n      laborJSONData: []\n    };\n  }\n  componentDidMount() {\n    this.handleFetchFromUrl();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header\",\n        children: \"Mike's US Labor Data Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(USAMap, {\n        defaultFill: \"rgba(250,255,250,0.8)\",\n        customize: this.statesFill(),\n        onClick: this.mapHandler,\n        onMouseOver: this.handleFetchFromUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.currentStateData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","USAMap","axios","XLSX","ExcelReader","jsxDEV","_jsxDEV","App","constructor","props","handleFetchFromUrl","url","console","log","response","get","responseType","data","Uint8Array","workbook","read","type","sheetName","SheetNames","sheet","Sheets","jsonData","utils","sheet_to_json","header","state","laborJSONData","error","mapHandler","event","stateName","target","querySelector","innerHTML","statesFill","fill","clickHandler","alert","currentStateData","componentDidMount","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","defaultFill","customize","onClick","onMouseOver"],"sources":["/Users/michael/Projects/fun-with-labor-data/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport USAMap from \"react-usa-map\";\nimport axios from 'axios';\nimport * as XLSX from 'xlsx';\nimport ExcelReader from './components/StateInfo';'./components/StateInfo.js';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {currentStateData: 'Select a state', laborJSONData: []}\n  }\n\n  componentDidMount() {\n    this.handleFetchFromUrl();\n  }\n\n  handleFetchFromUrl = async () => {\n    const url = '/state_M2023_dl.xlsx';\n    console.log(url);\n    \n    try {\n      const response = await axios.get(url, { responseType: 'arraybuffer' });\n\n      const data = new Uint8Array(response.data);\n      const workbook = XLSX.read(data, { type: 'array' });\n      const sheetName = workbook.SheetNames[0];\n      const sheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 32 });\n      this.state.laborJSONData = jsonData;\n    } catch (error) {\n      console.error('Error fetching or parsing Excel file:', error);\n    }\n  };\n\n  mapHandler = (event) => {\n    let stateName = event.target.querySelector('title').innerHTML;\n  };\n\n  statesFill = () => {\n    return {\n      \"CA\": {\n        fill: \"rgba(0,0,155,0.8)\",\n        clickHandler: () => alert(\"Custom callback for this US state.\")\n      }\n    };\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"header\">Mike's US Labor Data Visualization</h1>\n        <USAMap defaultFill={\"rgba(250,255,250,0.8)\"} customize={this.statesFill()} onClick={this.mapHandler} onMouseOver={this.handleFetchFromUrl} />\n        <p>{this.state.currentStateData}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,IAAI,MAAM,MAAM;AAC5B,OAAOC,WAAW,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,2BAA2B;AAE5E,MAAMC,GAAG,SAASP,SAAS,CAAC;EAE1BQ,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAQfC,kBAAkB,GAAG,YAAY;MAC/B,MAAMC,GAAG,GAAG,sBAAsB;MAClCC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAEhB,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACJ,GAAG,EAAE;UAAEK,YAAY,EAAE;QAAc,CAAC,CAAC;QAEtE,MAAMC,IAAI,GAAG,IAAIC,UAAU,CAACJ,QAAQ,CAACG,IAAI,CAAC;QAC1C,MAAME,QAAQ,GAAGhB,IAAI,CAACiB,IAAI,CAACH,IAAI,EAAE;UAAEI,IAAI,EAAE;QAAQ,CAAC,CAAC;QACnD,MAAMC,SAAS,GAAGH,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC;QACxC,MAAMC,KAAK,GAAGL,QAAQ,CAACM,MAAM,CAACH,SAAS,CAAC;QACxC,MAAMI,QAAQ,GAAGvB,IAAI,CAACwB,KAAK,CAACC,aAAa,CAACJ,KAAK,EAAE;UAAEK,MAAM,EAAE;QAAG,CAAC,CAAC;QAChE,IAAI,CAACC,KAAK,CAACC,aAAa,GAAGL,QAAQ;MACrC,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdpB,OAAO,CAACoB,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC/D;IACF,CAAC;IAAA,KAEDC,UAAU,GAAIC,KAAK,IAAK;MACtB,IAAIC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAACC,aAAa,CAAC,OAAO,CAAC,CAACC,SAAS;IAC/D,CAAC;IAAA,KAEDC,UAAU,GAAG,MAAM;MACjB,OAAO;QACL,IAAI,EAAE;UACJC,IAAI,EAAE,mBAAmB;UACzBC,YAAY,EAAEA,CAAA,KAAMC,KAAK,CAAC,oCAAoC;QAChE;MACF,CAAC;IACH,CAAC;IApCC,IAAI,CAACZ,KAAK,GAAG;MAACa,gBAAgB,EAAE,gBAAgB;MAAEZ,aAAa,EAAE;IAAE,CAAC;EACtE;EAEAa,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAAClC,kBAAkB,CAAC,CAAC;EAC3B;EAiCAmC,MAAMA,CAAA,EAAG;IACP,oBACEvC,OAAA;MAAKwC,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBzC,OAAA;QAAIwC,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAkC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9D7C,OAAA,CAACL,MAAM;QAACmD,WAAW,EAAE,uBAAwB;QAACC,SAAS,EAAE,IAAI,CAACd,UAAU,CAAC,CAAE;QAACe,OAAO,EAAE,IAAI,CAACrB,UAAW;QAACsB,WAAW,EAAE,IAAI,CAAC7C;MAAmB;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9I7C,OAAA;QAAAyC,QAAA,EAAI,IAAI,CAACjB,KAAK,CAACa;MAAgB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAEV;AACF;AAEA,eAAe5C,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}